#### 8.1 ####
7.1.1: See TestStripedMap.java

7.1.2: See TestStriped.java
It is important to lock the sizes array when reading because
sizes is updated in the put method.

7.1.3: See TestStripedMap.java

7.1.4: See TestStripedMap.java

7.1.5: See TestStripedMap.java

#### 8.2 ####
7.2.1 See TestSripedMap.java

7.2.2 See TestStripedMap.java
If nothing was added, you do not need to increment the stripe size, since nothing changed

7.2.3 See TestStripedMap.java

7.2.4 See TestStripedMap.java

7.2.5 
SynchronizedMap       16         687885,8 us   19319,04          2
99992.0
StripedMap            16        2550012,6 us  223000,83          2
99992.0
StripedWriteMap       16         922358,8 us   71732,29          2
71308.85
WrapConcHashMap       16         234111,2 us  118868,66          2
99992.0

As expected StripedWriteMap performs faster than StripedMap, since it only locks when trying to write to the instances


#### 8.3 ####
8.3.1
We chose implementation 1 with multiple DownloadWorkers.
The java documentation states that the publish method
is called within the doInBackground method. Creating
multiple threads within a doInBackground doesnâ€™t seem
to obey this paradigm, but I.E futureTasks could maybe
return intermediate results to the doInBackground method,
which could then update.

8.3.2
See TestFetchWebGui.java

8.3.3
See TestFetchWebGui.java
